class UserDefinedException extends Exception {
	public UserDefinedException(String str) {
		super(str);
	}
}

public class Exceptions {
	
	public static void function() throws NullPointerException{
		throw new NullPointerException("Throws check");
	}
	
	public static void main(String args[]) {
		//Unchecked(Runtime) exceptions
		try {
			int n = 100/0;
		}catch(ArithmeticException e) {
			System.out.println(e); // Prints exception class name & message
			System.out.println(e.getMessage()); // Prints only message
		}finally {
			System.out.println("Finally");
		}
		
		try {
			String s = null;
			System.out.println(s.length());
		}catch(NullPointerException e) {
			System.out.println(e);
		}
		
		try {
			String a = "Kishore";
			System.out.println(Integer.parseInt(a));
		}catch(NumberFormatException e) {
			System.out.println(e);
		}
		
		try {
			int a[] = new int[5];
			System.out.println(a[7]);
		}catch(ArrayIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		
		try {
			String s="abc";
			System.out.println(s.charAt(5));
		}catch(StringIndexOutOfBoundsException e) {
			System.out.println(e);
		}
		//Nested try-catch
		try {
			try {
				int n = 100/0;
			}catch(ArithmeticException e) {
				System.out.println("try within try");
			}
			int i=10/0;
		}catch(ArithmeticException e) {
			System.out.println("Outer try");
			try {
				String s = null;
				System.out.println(s.length());
			}catch(NullPointerException e2) {
				System.out.println("Try within catch");
			}
		}
		// Throw check
		try {
			throw new ArithmeticException("Throw");
		}catch(ArithmeticException e) {
			System.out.println(e);
		}
		// Throws check
		try {
			function();
		}catch (NullPointerException e) {
			System.out.println(e);
		}
		// User-defined exception
		try {
			throw new UserDefinedException("User defined Exception");
		}catch(UserDefinedException e) {
			System.out.println(e);
		}
	}
}